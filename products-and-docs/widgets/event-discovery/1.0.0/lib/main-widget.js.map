{"version":3,"file":"./products-and-docs/widgets/event-discovery/1.0.0/lib/main-widget.js","sources":["webpack:///webpack/bootstrap a116dd5fd0d1e2197ffb","webpack:///products-and-docs/widgets/event-discovery/1.0.0/src/main-widget.es6"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a116dd5fd0d1e2197ffb","class TicketmasterEventDiscoveryWidget {\n\n  set config(attrs) { this.widgetConfig = this.loadConfig(attrs); }\n  get config() { return this.widgetConfig; }\n\n  set events(responce){ this.eventsList = this.parseEvents(responce);}\n  get events(){ return this.eventsList;}\n\n  get isListView() { return this.config.theme === 'listview';}\n  get isListViewThumbnails() { return this.config.theme === 'listviewthumbnails';}\n  get isFullWidth() { return this.config.layout === 'fullwidth';}\n  get isPosterTheme() { return this.config.layout === 'simple';}\n  get isBarcodeWidget() { return (this.config.theme === 'oldschool' || this.config.theme === 'newschool');}\n  get isSimpleProportionM() { return this.config.proportion === 'm'}\n  get borderSize(){ return this.config.border || 0;}\n  get widgetHeight(){ return this.config.height || 600;}\n\n  get widgetContentHeight() {\n    return this.widgetHeight - (this.isListView || this.isListViewThumbnails || this.isSimpleProportionM || this.isFullWidth ? 0 : 39) || 600;\n  }\n\n  get eventUrl(){ return \"https://www.ticketmaster.com/event/\"; }\n\n  get apiUrl(){ return \"https://app.ticketmaster.com/discovery-widget/v2/events.json\"; }\n\n  get themeUrl() {\n    return (window.location.host === 'developer.ticketmaster.com')\n      ? `http://developer.ticketmaster.com/products-and-docs/widgets/event-discovery/1.0.0/theme/`\n      : `https://ticketmaster-api-staging.github.io/products-and-docs/widgets/event-discovery/1.0.0/theme/`;\n  }\n\n  get portalUrl(){\n    return (window.location.host === 'developer.ticketmaster.com')\n      ? `http://developer.ticketmaster.com/`\n      : `https://ticketmaster-api-staging.github.io/`;\n  }\n\n  get logoUrl() { return \"https://www.ticketmaster.com/\"; }\n\n  get legalNoticeUrl() { return \"http://developer.ticketmaster.com/support/terms-of-use/\"; }\n\n  get questionUrl() { return \"http://developer.ticketmaster.com/support/faq/\"; }\n\n  get widgetVersion() { return `${__VERSION__}`; }\n\n  get geocodeUrl() { return \"https://maps.googleapis.com/maps/api/geocode/json\"; }\n\n  get updateExceptions() { return [\"width\", \"height\", \"border\", \"borderradius\", \"colorscheme\", \"layout\", \"affiliateid\", \"propotion\", \"googleapikey\"]}\n\n  get sliderDelay(){ return 5000; }\n\n  get sliderRestartDelay(){ return 5000; }\n\n  get hideMessageDelay(){ return 5000; }\n\n  get controlHiddenClass(){ return \"events_control-hidden\"; }\n\n  get tmWidgetWhiteList(){ return [\"2200504BAD4C848F\", \"00005044BDC83AE6\", \"1B005068DB60687F\", \"1B004F4DBEE45E47\", \"3A004F4ED7829D5E\", \"3A004F4ED1FC9B63\", \"1B004F4FF83289C5\", \"1B004F4FC0276888\", \"0E004F4F3B7DC543\", \"1D004F4F09C61861\", \"1600505AC9A972A1\", \"22004F4FD82795C6\", \"01005057AFF54574\", \"01005056FAD8793A\", \"3A004F4FB2453240\", \"22004F50D2149AC6\", \"01005059AD49507A\", \"01005062B4236D5D\"]; }\n\n  get countriesWhiteList() {\n    return [\n      'Australia',\n      'Austria',\n      'Belgium',\n      'Canada',\n      'Denmark',\n      'Finland',\n      'France',\n      'Germany',\n      'Ireland',\n      'Mexico',\n      'Netherlands',\n      'New Zealand',\n      'Norway',\n      'Spain',\n      'Sweden',\n      'Turkey',\n      'UAE',\n      'United Kingdom',\n      'United States'\n    ]\n  }\n\n  isConfigAttrExistAndNotEmpty(attr) {\n    if( !this.config.hasOwnProperty(attr) || this.config[attr] === \"undefined\"){\n      return false;\n    }else if( this.config[attr] === \"\"){\n      return false;\n    }\n    return true;\n  }\n  \n  get eventReqAttrs(){\n    let WidgetRoot = this.eventsRootContainer.parentNode;\n    let attrs = {},\n    params = [\n      {\n        attr: 'tmapikey',\n        verboseName: 'apikey'\n      },\n      {\n          attr: 'latlong',\n          verboseName: 'latlong'\n      },\n      {\n        attr: 'keyword',\n        verboseName: 'keyword'\n      },\n      {\n        attr: 'size',\n        verboseName: 'size'\n      },\n      {\n        attr: 'radius',\n        verboseName: 'radius'\n      },\n      {\n        attr: 'attractionid',\n        verboseName: 'attractionId'\n      },\n      {\n        attr: 'promoterid',\n        verboseName: 'promoterId'\n      },\n      {\n        attr: 'venueid',\n        verboseName: 'venueId'\n      },\n      {\n        attr: 'classificationname',\n        verboseName: 'classificationName'\n      },\n      {\n        attr: 'city',\n        verboseName: 'city'\n      },\n      {\n        attr: 'countrycode',\n        verboseName: 'countryCode'\n      },\n      {\n        attr: 'source',\n        verboseName: 'source'\n      }\n    ];\n\n    for(let i in params){\n      let item = params[i];\n      if(this.isConfigAttrExistAndNotEmpty(item.attr))\n        attrs[item.verboseName] = this.config[item.attr];\n    }\n\n    if(this.config.latlong){\n        attrs.latlong = this.config.latlong.replace(/\\s+/g, '');\n    }\n\n    if(this.isConfigAttrExistAndNotEmpty(\"period\")){\n      let period = this.getDateFromPeriod(this.config.period);\n      attrs.startDateTime = period[0];\n      attrs.endDateTime = period[1];\n    }\n\n    if (this.widgetRoot.getAttribute(\"w-latlong\") != null) {\n        attrs.latlong = this.widgetRoot.getAttribute(\"w-latlong\").replace(/\\s+/g, '');\n    }\n\n    if (attrs.latlong == ',') {\n        delete attrs.latlong;\n    }\n\n    if (attrs.latlong == null) {\n        delete attrs.latlong;\n    }\n\n  return attrs;\n  }\n\n  constructor(root) {\n    if(!root) return;\n    this.widgetRoot = root;\n    if (this.widgetRoot.querySelector('.events-root-container') === null) {\n        this.eventsRootContainer = document.createElement(\"div\");\n        this.eventsRootContainer.classList.add(\"events-root-container\");\n        this.widgetRoot.appendChild(this.eventsRootContainer);\n\n        this.eventsRootDiv = document.createElement(\"div\");\n        this.eventsRootDiv.setAttribute(\"class\", \"ss\");\n        this.eventsRootDiv.setAttribute(\"ss-container\", \"\");\n        this.eventsRootContainer.appendChild(this.eventsRootDiv);\n\n        this.eventsRoot = document.createElement(\"ul\");\n        this.eventsRoot.classList.add(\"events-root\");\n        this.eventsRootDiv.appendChild(this.eventsRoot);\n\n        // Set theme modificators\n        this.themeModificators = {\n            \"oldschool\": this.oldSchoolModificator.bind(this),\n            \"newschool\": this.newSchoolModificator.bind(this),\n            \"listview\": this.listViewModificator.bind(this),\n            \"listviewthumbnails\": this.listViewModificator.bind(this)\n        };\n\n        this.config = this.widgetRoot.attributes;\n        this.listenerResize = [];\n\n        if (this.config.theme !== null && !document.getElementById(`widget-theme-${this.config.theme}`)) {\n            this.makeRequest(this.styleLoadingHandler, this.themeUrl + this.config.theme + \".css\");\n        }\n\n        this.eventsRootContainer.classList.remove(\"border\");\n        if (this.config.border) {\n            this.eventsRootContainer.classList.add(\"border\");\n        }\n\n        this.widgetRoot.style.height = `${this.widgetHeight}px`;\n        this.widgetRoot.style.width = `${this.config.width}px`;\n\n        this.eventsRootContainer.style.height = `${this.widgetContentHeight}px`;\n        this.eventsRootContainer.style.width = `${this.config.width}px`;\n        this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\n        this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\n\n        //this.clear();\n\n        this.AdditionalElements();\n\n        this.getCoordinates(() => {\n            this.makeRequest(this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs);\n        });\n\n        if (this.themeModificators.hasOwnProperty(this.widgetConfig.theme)) {\n            this.themeModificators[this.widgetConfig.theme]();\n        }\n\n      /*plugins for 'buy button'*/\n        this.embedUniversePlugin();\n        this.embedTMPlugin();\n\n        this.initBuyBtn();\n\n        this.initMessage();\n\n        if (!this.isListView || !this.isListViewThumbnails ) this.initSliderControls();\n\n        if (!this.isListView || !this.isListViewThumbnails ) this.initEventCounter();\n\n        if (this.isListView || this.isListViewThumbnails) this.addScroll();\n\n        if (this.isFullWidth) { this.initFullWidth(); }\n    }\n  }\n\n  getCoordinates(cb){\n    let widget = this;\n\n    function parseGoogleGeocodeResponse(){\n      if (this && this.readyState === XMLHttpRequest.DONE ) {\n        let latlong = '',\n          results = null,\n          countryShortName = '';\n        if(this.status === 200) {\n          let response = JSON.parse(this.responseText);\n          if (response.status === 'OK' && response.results.length) {\n            // Filtering only white list countries\n            results = response.results.filter((item) => {\n              return widget.countriesWhiteList.filter((elem) => {\n                  return elem === item.address_components[item.address_components.length - 1].long_name;\n                }).length > 0;\n            });\n\n            if (results.length) {\n              // sorting results by country name\n              results.sort((f, g) => {\n                let a = f.address_components[f.address_components.length - 1].long_name;\n                let b = g.address_components[g.address_components.length - 1].long_name;\n                if (a > b) {\n                  return 1;\n                }\n                if (a < b) {\n                  return -1;\n                }\n                return 0;\n              });\n\n              // Use first item if multiple results was found in one country or in different\n              let geometry = results[0].geometry;\n              countryShortName = results[0].address_components[results[0].address_components.length - 1].short_name;\n\n              // If multiple results without country try to find USA as prefer value\n              if (!widget.config.country) {\n                for (let i in results) {\n                  let result = results[i];\n                  if (result.address_components) {\n                    let country = result.address_components[result.address_components.length - 1];\n                    if (country) {\n                      if (country.short_name === 'US') {\n                        countryShortName = 'US';\n                        geometry = result.geometry;\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (geometry) {\n                if (geometry.location) {\n                  latlong = `${geometry.location.lat},${geometry.location.lng}`;\n                }\n              }\n            } else {\n              results = null;\n            }\n          }\n        }\n        // Used in builder\n        if(widget.onLoadCoordinate) widget.onLoadCoordinate(results, countryShortName);\n        widget.config.latlong = latlong;\n        cb(widget.config.latlong);\n      }\n    }\n\n    if(this.isConfigAttrExistAndNotEmpty('postalcode')){\n      let args = {language: 'en', components: `postal_code:${widget.config.postalcode}`};\n      if(widget.config.googleapikey) args.key = widget.config.googleapikey;\n      if(this.config.country) args.components += `|country:${this.config.country}`;\n      this.makeRequest( parseGoogleGeocodeResponse, this.geocodeUrl, args);\n    }else{\n      // Used in builder\n      if(widget.onLoadCoordinate) widget.onLoadCoordinate(null);\n      widget.config.latlong = '';\n      widget.config.country = '';\n      cb(widget.config.latlong);\n    }\n  }\n\n  initBuyBtn(){\n    this.buyBtn = document.createElement(\"a\");\n    this.buyBtn.appendChild(document.createTextNode('BUY NOW'));\n    this.buyBtn.classList.add(\"event-buy-btn\");\n    this.buyBtn.classList.add(\"main-btn\");\n    this.buyBtn.target = '_blank';\n    this.buyBtn.href = '';\n    this.buyBtn.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickBuyButton', 'click');\");\n    this.buyBtn.addEventListener('click', (e)=> {\n      // e.preventDefault(); /*used in plugins for 'buy button'*/\n      this.stopAutoSlideX();\n    });\n    this.eventsRootContainer.appendChild(this.buyBtn);\n  }\n\n  /**\n   * Set position center/right\n   *\n   * @param url\n   * @param isAddressCenter - if true : Set address position center/right for oldschool theme 300x250 (proportion :'m')\n   */\n  updateTransition(url , isAddressCenter) {\n    let el = this.eventsRootContainer.querySelector(\".event-logo.centered-logo\");\n    (isAddressCenter)? el = this.eventsRootContainer.querySelectorAll(\".event-date.centered-logo\") : el = this.eventsRootContainer.querySelector(\".event-logo.centered-logo\");    \n    if(url !=='') {\n      if(el && !isAddressCenter){\n        el.classList.add(\"right-logo\");\n        el.classList.remove(\"centered-logo\");\n      }else if(el){\n        let i;\n        for (i = 0; i < el.length-1; i++) {\n          el[i].classList.remove(\"centered-logo\");\n        }\n      }\n    }\n    else {\n      (isAddressCenter)? el = this.eventsRootContainer.querySelectorAll(\".event-date\"): el = this.eventsRootContainer.querySelector(\".event-logo.right-logo\");\n      if (el && !isAddressCenter) {\n        el.classList.remove(\"right-logo\");\n        el.classList.add(\"centered-logo\");\n      }else if(el){\n        let i;\n        for (i = 0; i < el.length-1; i++) {\n          el[i].classList.add(\"centered-logo\");\n        }\n      }\n    }\n  }\n\n  setBuyBtnUrl(){\n    if(this.buyBtn){\n      let event = this.eventsGroups[this.currentSlideX][this.currentSlideY],\n          url = '';\n      if(event){\n        if(event.url){\n           if((this.isUniversePluginInitialized && this.isUniverseUrl(event.url)) || (this.isTMPluginInitialized && this.isAllowedTMEvent(event.url))){\n             url = event.url;\n           }\n\n          if(this.config.theme === 'oldschool' && this.config.proportion === 'm'){\n            this.updateTransition(url , true);\n          }else{\n            this.updateTransition(url);\n          }\n\n        }\n      }\n      this.buyBtn.href = url;\n    }\n  }\n\n  isUniverseUrl(url){\n    return !!url && (url.match(/universe.com/g) || url.match(/uniiverse.com/g) || url.match(/ticketmaster.com/g));\n  }\n\n  isAllowedTMEvent(url){\n    var id = 0;\n    if (url !== undefined) {\n        for (var t = [/(?:ticketmaster\\.com)\\/(.*\\/)?event\\/([^\\/?#]+)/, /(?:concerts\\.livenation\\.com)\\/(.*\\/)?event\\/([^\\/?#]+)/], n = null, r = 0; r < t.length && (n = url.match(t[r]), null === n); r++);\n        id = (null !== n ? n[2] : void 0);\n    }\n    else {\n      let id = 0;\n    }\n    return (this.tmWidgetWhiteList.indexOf(id) > -1);\n  }\n\n  embedTMPlugin(){\n    let id = 'id_tm_widget';\n    if( !document.getElementById(id) ) {\n      let script = document.createElement('script');\n      script.setAttribute('src', this.portalUrl + 'scripts/vendors/tm.js');\n      script.setAttribute('type', 'text/javascript');\n      script.setAttribute('charset', 'UTF-8');\n      script.setAttribute('id', id);\n      (document.head || document.getElementsByTagName('head')[0]).appendChild(script);\n    }\n    this.isTMPluginInitialized = true;\n  }\n\n  embedUniversePlugin(){\n    let id = 'id_universe_widget';\n    if( !document.getElementById(id) ){\n      let script = document.createElement('script');\n      script.setAttribute('src', 'https://www.universe.com/embed.js');\n      script.setAttribute('type', 'text/javascript');\n      script.setAttribute('charset', 'UTF-8');\n      script.setAttribute('id', id);\n      (document.head || document.getElementsByTagName('head')[0]).appendChild(script);\n    }\n    this.isUniversePluginInitialized = true;\n  }\n\n  // Message\n  initMessage(){\n    this.messageDialog = document.createElement('div');\n    this.messageDialog.classList.add(\"event-message\");\n    this.messageContent = document.createElement('div');\n    this.messageContent.classList.add(\"event-message__content\");\n\n    let messageClose = document.createElement('div');\n    messageClose.classList.add(\"event-message__btn\");\n    messageClose.addEventListener(\"click\", ()=> {\n      this.hideMessage();\n    });\n\n    this.messageDialog.appendChild(this.messageContent);\n    this.messageDialog.appendChild(messageClose);\n    this.eventsRootContainer.appendChild(this.messageDialog);\n  }\n\n  showMessage(message, hideMessageWithoutDelay){\n    if(message.length){\n      this.hideMessageWithoutDelay = hideMessageWithoutDelay;\n      this.messageContent.innerHTML = message;\n      this.messageDialog.classList.add(\"event-message-visible\");\n      if (this.messageTimeout) {\n        clearTimeout(this.messageTimeout); // Clear timeout if before 'hideMessageWithDelay' was called\n      }\n    }\n  }\n\n  hideMessageWithDelay(delay){\n    if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout if this method was called before\n    this.messageTimeout = setTimeout(()=>{\n      this.hideMessage();\n    }, delay);\n  }\n\n  hideMessage(){\n    if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout and hide message immediately.\n    this.messageDialog.classList.remove(\"event-message-visible\");\n  }\n  // End message\n\n  AdditionalElements(){\n    var legalNoticeContent = document.createTextNode('Legal Notice'),\n        legalNotice = document.createElement(\"a\");\n    legalNotice.appendChild(legalNoticeContent);\n    legalNotice.classList.add(\"legal-notice\");\n    legalNotice.target = '_blank';\n    legalNotice.href = this.legalNoticeUrl;\n    this.widgetRoot.appendChild(legalNotice);\n\n    var logo = document.createElement('a');\n    logo.classList.add(\"event-logo\",\"centered-logo\");\n    logo.target = '_blank';\n    logo.href = this.logoUrl;\n    logo.innerHTML = 'Powered by ';\n\n    var logoBox = document.createElement('div');\n    logoBox.classList.add(\"event-logo-box\");\n    logoBox.appendChild(logo);\n    this.eventsRootContainer.appendChild(logoBox);\n\n    let question = document.createElement('span'),\n        toolTip = document.createElement('div'),\n        tooltipHtml = `\n      <div class=\"tooltip-inner\"> \n        <a href=\"${this.questionUrl}\" target = \"_blank\" >About widget</a>\n        <div class=\"place\">version: <b>${this.widgetVersion}</b></div>\n      </div>`;\n    question.classList.add(\"event-question\");\n    question.addEventListener('click', toolTipHandler);\n    toolTip.classList.add(\"tooltip-version\");\n    toolTip.classList.add(\"left\");\n    toolTip.innerHTML = tooltipHtml;\n    this.eventsRootContainer.appendChild(question);\n    this.eventsRootContainer.appendChild(toolTip);\n\n    function toolTipHandler(e) {\n      e.preventDefault();\n      e.target.nextSibling.classList.toggle('show-tip');\n    }\n  }\n\n  //adds general admission element for OLDSCHOOL theme\n  oldSchoolModificator(){\n\n    var generalAdmissionWrapper = document.createElement(\"div\");\n        generalAdmissionWrapper.classList.add(\"general-admission\", \"modificator\");\n\n    var generalAdmission = document.createElement(\"div\"),\n        generalAdmissionText = document.createTextNode('GENERAL ADMISSION');\n        generalAdmission.appendChild(generalAdmissionText);\n        generalAdmissionWrapper.appendChild(generalAdmission);\n\n    this.eventsRootContainer.appendChild(generalAdmissionWrapper);\n  }\n\n  newSchoolModificator(){\n    var ticketLogo = document.createElement(\"div\");\n    ticketLogo.classList.add(\"ticket-logo\", \"modificator\");\n\n    for(let i = 0; i < 4; i++){\n      let headLogo = document.createElement(\"img\");\n      headLogo.setAttribute(\"src\", this.portalUrl + \"assets/widgets/1.0.0/img/ticketmaster-logo-white.svg\");\n      headLogo.setAttribute(\"height\", \"11\");\n      ticketLogo.appendChild(headLogo);\n    }\n\n    this.eventsRootContainer.appendChild(ticketLogo);\n  }\n\n  listViewModificator(){\n  }\n\n  hideSliderControls(){\n    this.prevEventX.classList.add(this.controlHiddenClass);\n    this.nextEventX.classList.add(this.controlHiddenClass);\n    this.prevEventY.classList.add(this.controlHiddenClass);\n    this.nextEventY.classList.add(this.controlHiddenClass);\n  }\n\n  toggleControlsVisibility(){\n    // Horizontal\n    if(this.slideCountX > 1){\n      this.prevEventX.classList.remove(this.controlHiddenClass);\n      this.nextEventX.classList.remove(this.controlHiddenClass);\n      if(this.currentSlideX === 0){\n        this.prevEventX.classList.add(this.controlHiddenClass);\n      }else if(this.currentSlideX === this.slideCountX - 1){\n        this.nextEventX.classList.add(this.controlHiddenClass);\n      }\n    }else{\n      this.prevEventX.classList.add(this.controlHiddenClass);\n      this.nextEventX.classList.add(this.controlHiddenClass);\n    }\n\n    // Vertical\n    if(this.eventsGroups.length){\n      if(this.eventsGroups[this.currentSlideX].length > 1){\n        this.prevEventY.classList.remove(this.controlHiddenClass);\n        this.nextEventY.classList.remove(this.controlHiddenClass);\n        if(this.currentSlideY === 0){\n          this.prevEventY.classList.add(this.controlHiddenClass);\n        }else if(this.currentSlideY === this.eventsGroups[this.currentSlideX].length - 1){\n          this.nextEventY.classList.add(this.controlHiddenClass);\n        }\n      }else{\n        this.prevEventY.classList.add(this.controlHiddenClass);\n        this.nextEventY.classList.add(this.controlHiddenClass);\n      }\n    }else{\n      this.prevEventY.classList.add(this.controlHiddenClass);\n      this.nextEventY.classList.add(this.controlHiddenClass);\n    }\n  }\n\n  prevSlideX(){\n    if(this.currentSlideX > 0){\n      this.setSlideManually(this.currentSlideX - 1, true);\n    }\n  }\n\n  nextSlideX(){\n    if(this.slideCountX - 1 > this.currentSlideX) {\n      this.setSlideManually(this.currentSlideX + 1, true);\n    }\n  }\n\n  prevSlideY(){\n    if(this.currentSlideY > 0){\n      this.setSlideManually(this.currentSlideY - 1, false);\n    }\n  }\n\n  nextSlideY(){\n    if(this.eventsGroups[this.currentSlideX].length - 1 > this.currentSlideY) {\n      this.setSlideManually(this.currentSlideY + 1, false);\n    }\n  }\n\n  setSlideManually(slideIndex, isDirectionX){\n    this.stopAutoSlideX();\n    this.sliderTimeout = setTimeout(()=>{\n      this.runAutoSlideX();\n    }, this.sliderRestartDelay);\n    if(isDirectionX)\n      this.goToSlideX(slideIndex);\n    else\n      this.goToSlideY(slideIndex);\n  }\n\n  goToSlideX(slideIndex){\n    if(this.currentSlideX === slideIndex) return;\n    this.currentSlideY = 0;\n    this.currentSlideX = slideIndex;\n    this.eventsRoot.style.marginLeft = `-${this.currentSlideX * 100}%`;\n    this.toggleControlsVisibility();\n    this.setEventsCounter();\n    this.setBuyBtnUrl();\n  }\n\n  goToSlideY(slideIndex){\n    if(this.currentSlideY === slideIndex) return;\n    this.currentSlideY = slideIndex;\n    let eventGroup = this.eventsRoot.getElementsByClassName(\"event-group-\" + this.currentSlideX);\n    if(eventGroup.length){\n      eventGroup = eventGroup[0];\n      eventGroup.style.marginTop = `-${this.currentSlideY * (this.widgetContentHeight - this.borderSize * 2)}px`;\n      this.toggleControlsVisibility();\n      this.setBuyBtnUrl();\n    }\n  }\n\n  runAutoSlideX(){\n    if(this.slideCountX > 1) {\n      this.sliderInterval = setInterval(()=> {\n        var slideIndex = 0;\n        if (this.slideCountX - 1 > this.currentSlideX) slideIndex = this.currentSlideX + 1;\n        this.goToSlideX(slideIndex);\n      }, this.sliderDelay);\n    }\n  }\n\n  stopAutoSlideX(){\n    if(this.sliderTimeout) clearTimeout(this.sliderTimeout);\n    if(this.sliderInterval) clearInterval(this.sliderInterval);\n  }\n\n  initSliderControls(){\n    this.currentSlideX = 0;\n    this.currentSlideY = 0;\n    this.slideCountX = 0;\n    let coreCssClass = 'events_control';\n\n    // left btn\n    this.prevEventX = document.createElement(\"div\");\n    let prevEventXClass = [coreCssClass, coreCssClass + '-horizontal', coreCssClass + '-left', this.controlHiddenClass];\n    for(let i in prevEventXClass){\n      this.prevEventX.classList.add(prevEventXClass[i]);\n    }\n    this.eventsRootContainer.appendChild(this.prevEventX);\n\n    // right btn\n    this.nextEventX = document.createElement(\"div\");\n    let nextEventXClass = [coreCssClass, coreCssClass + '-horizontal', coreCssClass + '-right', this.controlHiddenClass];\n    for(let i in nextEventXClass){\n      this.nextEventX.classList.add(nextEventXClass[i]);\n    }\n    this.eventsRootContainer.appendChild(this.nextEventX);\n\n    // top btn\n    this.prevEventY = document.createElement(\"div\");\n    let prevEventYClass = [coreCssClass, coreCssClass + '-vertical', coreCssClass + '-top', this.controlHiddenClass];\n    for(let i in prevEventYClass ){\n      this.prevEventY.classList.add(prevEventYClass[i]);\n    }\n    this.eventsRootContainer.appendChild(this.prevEventY);\n\n    // bottom btn\n    this.nextEventY = document.createElement(\"div\");\n    let nextEventYClass = [coreCssClass, coreCssClass + '-vertical', coreCssClass + '-bottom', this.controlHiddenClass];\n    for(let i in nextEventYClass){\n      this.nextEventY.classList.add(nextEventYClass[i]);\n    }\n    this.eventsRootContainer.appendChild(this.nextEventY);\n\n    // Restore events group position\n    function whichTransitionEvent(){\n      let el = document.createElement('fakeelement'),\n        transitions = {\n          'transition':'transitionend',\n          'OTransition':'oTransitionEnd',\n          'MozTransition':'transitionend',\n          'WebkitTransition':'webkitTransitionEnd'\n        };\n\n      for(let event in transitions){\n        if( el.style[event] !== undefined ) return transitions[event];\n      }\n    }\n\n    var transitionEvent = whichTransitionEvent();\n    transitionEvent && this.eventsRoot.addEventListener(transitionEvent, (e)=> {\n      if (this.eventsRoot !== e.target) return;\n      let eventGroup = this.eventsRoot.getElementsByClassName(\"event-group\");\n      // Reset all groups. We don't know what event group was visible before.\n      for(let i = 0; eventGroup.length > i; i++){\n        eventGroup[i].style.marginTop = 0;\n      }\n    });\n\n    // Arrows\n    this.prevEventX.addEventListener(\"click\", ()=> {\n      this.prevSlideX();\n    });\n\n    this.nextEventX.addEventListener(\"click\", ()=> {\n      this.nextSlideX();\n    });\n\n    this.prevEventY.addEventListener(\"click\", ()=> {\n      this.prevSlideY();\n    });\n\n    this.nextEventY.addEventListener(\"click\", ()=> {\n      this.nextSlideY();\n    });\n\n    // Tough device swipes\n    let xDown = null,\n        yDown = null;\n\n    function handleTouchStart(evt) {\n      xDown = evt.touches[0].clientX;\n      yDown = evt.touches[0].clientY;\n    }\n\n    function handleTouchMove(evt) {\n      if ( ! xDown || ! yDown ) return;\n\n      let xUp = evt.touches[0].clientX,\n          yUp = evt.touches[0].clientY,\n          xDiff = xDown - xUp,\n          yDiff = yDown - yUp;\n\n      if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {\n        if ( xDiff > 0 )\n          this.nextSlideX(); // left swipe\n        else\n          this.prevSlideX(); // right swipe\n      } else {\n        if ( yDiff > 0 )\n          this.nextSlideY(); // up swipe\n        else\n          this.prevSlideY(); // down swipe\n      }\n\n      xDown = null;\n      yDown = null;\n    }\n\n    this.eventsRootContainer.addEventListener('touchstart', (e)=> {\n      if(this.config.theme !== \"listview\" && this.config.theme !==\"listviewthumbnails\") { if (e.target.className != 'event-logo' && e.target.className != 'event-question' && e.target.className != 'event-buy-btn main-btn') e.preventDefault(); }\n      handleTouchStart.call(this, e);\n    }, false);\n    this.eventsRootContainer.addEventListener('touchmove', (e)=> {\n      if(this.config.theme !== \"listview\" && this.config.theme !==\"listviewthumbnails\") { if (e.target.className != 'event-logo' && e.target.className != 'event-question' && e.target.className != 'event-buy-btn main-btn') e.preventDefault(); }\n      handleTouchMove.call(this, e);\n    }, false);\n  }\n\n  initSlider(){\n    if(this.sliderInterval) clearInterval(this.sliderInterval);\n    if(this.sliderTimeout) clearTimeout(this.sliderTimeout);\n    this.slideCountX = this.eventsGroups.length;\n    this.eventsRoot.style.marginLeft = '0%';\n    this.eventsRoot.style.width = (this.isFullWidth) ? `${this.slideCountX * this.widgetRoot.offsetWidth }px` :  `${this.slideCountX * 100}%` ;\n    this.currentSlideX = 0;\n    this.currentSlideY = 0;\n    this.runAutoSlideX();\n\n    if (this.isFullWidth) {\n      let list = this.widgetRoot.querySelectorAll('li'),\n        me = this,\n        resizeTimeout;\n\n      window.addEventListener('resize', resizeThrottler, false);\n      this.listenerResize.push(resizeThrottler);\n      \n      function resizeThrottler() {\n        // ignore resize events as long as an actualResizeHandler execution is in the queue\n        if ( !resizeTimeout ) {\n          resizeTimeout = setTimeout(function() {\n            resizeTimeout = null;\n            actualResizeHandler();\n\n            // The actualResizeHandler will execute at a rate of 15fps\n          }, 66);\n        }\n      }\n\n      function actualResizeHandler() {\n        // handle the resize event\n        list.forEach((item)=> {\n          item.style.width = `${me.widgetRoot.offsetWidth}px`;\n          item.style.height = `${me.widgetRoot.widgetContentHeight}px`;\n        });\n\n        me.eventsRoot.style.width = (me.isFullWidth) ? `${me.slideCountX * me.widgetRoot.offsetWidth }px` :  `${me.slideCountX * 100}%`;\n      }\n      \n    }else if(this.listenerResize && this.listenerResize.length !== 0){\n        window.removeEventListener(\"resize\", this.listenerResize[0], false);\n        this.listenerResize.pop();\n    }\n\n    this.toggleControlsVisibility();\n    this.setBuyBtnUrl();\n  }\n\n  initFullWidth(){\n    let heightStatic = 550;\n    this.config.width = `100%`;\n    this.config.height = heightStatic;\n    this.widgetRoot.style.width = `100%`;\n    this.widgetRoot.style.height = heightStatic + 'px';\n    this.widgetRoot.style.display = `block`;\n    this.eventsRootContainer.style.width  = `100%`;\n    this.eventsRootContainer.style.height = `${this.widgetContentHeight}px`;\n  }\n\n  formatDate(date) {\n    var result = '';\n    if (date === undefined) return result;\n    if(!date.day) return result; // Day is required\n\n    function LZ(x) {\n      return (x < 0 || x > 9 ? \"\" : \"0\") + x\n    }\n    var MONTH_NAMES = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\n        DAY_NAMES = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\n        dayArray = date.day.split('-'),\n        d = parseInt(dayArray[2]),\n        M = parseInt(dayArray[1]);\n\n    // var E = new Date(date.day).getDay();\n    var E = new Date(+date.day.split('-')[0],(+date.day.split('-')[1])-1,+date.day.split('-')[2]).getDay();\n    result = DAY_NAMES[E] + ', ' + MONTH_NAMES[M - 1] + ' ' + d + ', ' + dayArray[0];\n\n    if(!date.time) return result;\n\n    var timeArray = date.time.split(':'),\n      H = parseInt(timeArray[0]),\n      m = timeArray[1],\n      a = \"AM\";\n\n    if (H > 11) a = \"PM\";\n    if (H == 0) {\n      H = 12;\n    } else if (H > 12) {\n      H = H - 12;\n    }\n\n    return result + ' ' + LZ(H) + ':' + m + ' ' + a;\n  }\n\n  clearEvents(){\n    this.eventsRoot.innerHTML = \"\";\n  }\n\n  clear(){\n    var modificatorList = this.widgetRoot.getElementsByClassName('modificator');\n    while (modificatorList.length) {\n      let el = modificatorList[0],\n          parent = el.parentNode;\n      parent.removeChild(el);\n    }\n\n\n    if(!this.isListView && !this.isListViewThumbnails ) {\n      var eventsRootContainer = document.getElementsByClassName(\"events-root-container\")[0];\n      var eventsRoot = document.getElementsByClassName(\"events-root\")[0];\n      var ss = document.getElementsByClassName(\"ss\")[0];\n      ss.parentNode.removeChild(ss);\n\n      var ssDiv = document.createElement(\"div\");\n      ssDiv.setAttribute(\"class\", \"ss\");\n      eventsRootContainer.appendChild(ssDiv);\n\n      var ssDiv = document.getElementsByClassName(\"ss\")[0];\n      ssDiv.appendChild(eventsRoot);\n\n      var eventsRootContainer = document.getElementsByClassName(\"widget-container--discovery\")[0];\n      eventsRootContainer.classList.remove(\"listview-after\");\n    }\n\n    if(this.isListView || this.isListViewThumbnails || this.isFullWidth ) {\n      var eventsRootContainer = document.getElementsByClassName(\"widget-container--discovery\")[0];\n      eventsRootContainer.classList.add(\"listview-after\");\n    }\n\n\n    this.clearEvents();\n  }\n\n  update() {\n\n    let oldTheme = this.config.constructor();\n    for (let attr in this.config) {\n      if (this.config.hasOwnProperty(attr)) oldTheme[attr] = this.config[attr];\n    }\n\n    this.config = this.widgetRoot.attributes;\n\n    if(this.isListView || this.isListViewThumbnails ) {\n      this.stopAutoSlideX();\n    }\n    if (!this.isFullWidth) {\n      this.widgetRoot.style.height = `${this.widgetHeight}px`;\n      this.widgetRoot.style.width  = `${this.config.width}px`;\n      this.eventsRootContainer.style.height = `${this.widgetContentHeight}px`;\n      this.eventsRootContainer.style.width  = `${this.config.width}px`;\n    }\n    this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\n    this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\n\n    this.eventsRootContainer.classList.remove(\"border\");\n    if( this.config.hasOwnProperty(\"border\") ){\n      this.eventsRootContainer.classList.add(\"border\");\n    }\n\n    if(!this.needToUpdate(this.config, oldTheme, this.updateExceptions) || this.needToUpdate(this.config, oldTheme, this.updateExceptions)){\n      this.clear();\n\n      if( this.themeModificators.hasOwnProperty( this.widgetConfig.theme ) ) {\n        this.themeModificators[ this.widgetConfig.theme ]();\n      }\n\n      this.getCoordinates(() => {\n        this.makeRequest( this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs );\n      });\n\n      if(this.isListView || this.isListViewThumbnails ) this.addScroll();\n      if (this.isFullWidth) { this.initFullWidth(); }\n\n    }\n    else{\n      let events = this.eventsRoot.getElementsByClassName(\"event-wrapper\");\n      for(let i in events){\n        if(events.hasOwnProperty(i) && events[i].style !== undefined){\n          events[i].style.width = `${this.config.width - this.borderSize * 2}px`;\n          events[i].style.height = `${this.widgetContentHeight - this.borderSize * 2}px`;\n        }\n      }\n      if(!this.isListView && !this.isListViewThumbnails ) {\n        this.goToSlideY(0);\n      }\n    }\n\n  }\n\n  needToUpdate(newTheme, oldTheme, forCheck = []){\n    return Object.keys(newTheme).map(function(key){\n      if(forCheck.indexOf(key) > -1) return true;\n      return newTheme[key] === oldTheme[key] ;\n    }).indexOf(false) > -1\n  }\n\n  loadConfig(NamedNodeMap){\n      var config = {};\n      Object.keys(NamedNodeMap).map(function(value){\n        if( typeof(NamedNodeMap[value].name) !== \"undefined\" && NamedNodeMap[value].name.indexOf(\"w-\") !== -1){\n          config[ NamedNodeMap[value].name.replace(/w-/g, \"\").replace(/-/g, \"\") ] = NamedNodeMap[value].value;\n        }\n      });\n      return config;\n  }\n\n  styleLoadingHandler(){\n    if (this && this.readyState == XMLHttpRequest.DONE ) {\n      if(this.status == 200){\n        var style = document.createElement(\"style\");\n        style.setAttribute(\"type\",\"text/css\");\n        style.setAttribute(\"id\",`widget-theme-${this.widget.config.theme}`);\n        style.textContent = this.responseText;\n        document.getElementsByTagName(\"head\")[0].appendChild(style);\n      }\n      else {\n        console.log(\"theme wasn't loaded\");\n      }\n    }\n  }\n\n  groupEventsByName(){\n    let groups = {};\n    this.events.map(function(event){\n      if (groups[event.name] === undefined) groups[event.name] = [];\n      groups[event.name].push(event);\n    });\n    this.eventsGroups = [];\n    for (let groupName in groups) {\n      this.eventsGroups.push(groups[groupName]);\n    }\n  }\n\n  initEventCounter(){\n    this.eventsCounter = document.createElement(\"div\");\n    this.eventsCounter.classList.add(\"events-counter\");\n    this.widgetRoot.appendChild(this.eventsCounter);\n  }\n\n  setEventsCounter(){\n    if(this.eventsCounter){\n      let text = '';\n      if(this.eventsGroups.length){\n        if(this.eventsGroups.length > 1){\n          text = `${this.currentSlideX + 1} of ${this.eventsGroups.length} events`;\n        } else {\n          text = '1 event';\n        }\n      }\n      this.eventsCounter.innerHTML = text;\n    }\n  }\n\n  resetReduceParamsOrder(){\n    this.reduceParamsOrder = 0;\n  }\n\n  reduceParamsAndReloadEvents(){\n    let eventReqAttrs = {},\n      reduceParamsList = [\n        ['classificationName'],\n        ['city'],\n        ['countryCode'],\n        ['source'],\n        ['startDateTime', 'endDateTime', 'country'],\n        ['radius'],\n        ['postalCode', 'latlong'],\n        ['attractionId'],\n        ['promoterId'],\n        // ['segmentId'],\n        ['venueId'],\n        ['keyword'],\n        ['size']\n      ];\n\n    // make copy of params\n    for(let key in this.eventReqAttrs){\n      eventReqAttrs[key] = this.eventReqAttrs[key]\n    }\n\n    if(!this.reduceParamsOrder) this.reduceParamsOrder = 0;\n    if(reduceParamsList.length > this.reduceParamsOrder){\n      for(let item in reduceParamsList){\n        if(this.reduceParamsOrder >= item){\n          for(let i in reduceParamsList[item]){\n            delete eventReqAttrs[reduceParamsList[item][i]];\n          }\n        }\n      }\n\n      if(this.reduceParamsOrder === 0) this.showMessage(\"No results were found.<br/>Here other options for you.\");\n      this.reduceParamsOrder++;\n      this.makeRequest( this.eventsLoadingHandler, this.apiUrl, eventReqAttrs );\n    }else{\n      // We haven't any results\n      this.showMessage(\"No results were found.\", true);\n      this.reduceParamsOrder = 0;\n      this.hideSliderControls();\n      document.querySelector('.event-buy-btn.main-btn').setAttribute('href', '');\n      this.stopAutoSlideX();\n    }\n  }\n\n  eventsLoadingHandler(){\n    let widget = this.widget;\n    widget.clearEvents(); // Additional clearing after each loading\n    if (this && this.readyState == XMLHttpRequest.DONE ) {\n      if(this.status == 200){\n        widget.events = JSON.parse(this.responseText);\n\n        if(widget.events.length){\n          widget.groupEventsByName.call(widget);\n          widget.eventsGroups.map(function(group, i){\n            if(group.length === 1)\n              widget.publishEvent(group[0]);\n            else\n              widget.publishEventsGroup.call(widget, group, i);\n          });\n          if (!widget.isListView && !widget.isListViewThumbnails) widget.initSlider();\n\n          widget.setEventsCounter();\n          widget.resetReduceParamsOrder();\n          if(widget.hideMessageWithoutDelay)\n            widget.hideMessage();\n          else\n            widget.hideMessageWithDelay(widget.hideMessageDelay);\n\n        }else{\n          widget.reduceParamsAndReloadEvents.call(widget);\n        }\n      }\n      else if(this.status == 400) {\n        widget.reduceParamsAndReloadEvents.call(widget);\n        console.log('There was an error 400');\n      }\n      else {\n        widget.reduceParamsAndReloadEvents.call(widget);\n        console.log('something else other than 200 was returned');\n      }\n    }\n  }\n\n  publishEventsGroup(group, index){\n    let groupNodeWrapper = document.createElement(\"li\");\n    groupNodeWrapper.classList.add(\"event-wrapper\");\n    groupNodeWrapper.classList.add(\"event-group-wrapper\");\n\n    groupNodeWrapper.style.width = (!this.isFullWidth) ? `${this.config.width - this.borderSize * 2}px` : `${this.widgetRoot.offsetWidth - this.borderSize * 2 }px`;\n    groupNodeWrapper.style.height = (!this.isFullWidth) ? `${this.widgetContentHeight - this.borderSize * 2}px`: `${this.widgetContentHeight - this.borderSize * 2}px`;\n\n    let groupNode = document.createElement(\"ul\");\n    groupNode.classList.add(\"event-group\");\n    groupNode.classList.add(\"event-group-\" + index);\n\n    group.map((event)=> {\n      this.publishEvent(event, groupNode)\n    });\n\n    groupNodeWrapper.appendChild(groupNode);\n    this.eventsRoot.appendChild(groupNodeWrapper);\n  }\n\n  publishEvent(event, parentNode){\n    parentNode = parentNode || this.eventsRoot;\n    let DOMElement = this.createDOMItem(event);\n    parentNode.appendChild(DOMElement);\n  }\n\n  getEventByID(id){\n    for(let index in this.events){\n      if(this.events.hasOwnProperty(index) && this.events[index].id === id){\n        return this.events[index]\n      }\n    }\n  }\n\n  getImageForEvent(images , isGetSmallest , isSecondSmallest){\n    var width = this.config.width,\n      height = this.widgetContentHeight;\n\n    if(width === '100%') { width = this.widgetRoot.offsetWidth }\n    images.sort(function(a,b) {\n      if (a.width < b.width)\n        return -1;\n      else if (a.width > b.width)\n        return 1;\n      else\n        return 0;\n    });\n\n    var myImg = \"\";\n    images.forEach(function (element) {\n      if (element.width >= width && element.height >= height && !myImg) {\n        myImg = element.url;\n      }\n    });\n\n    if(isGetSmallest) {\n      myImg = images[0].url;\n      if(isSecondSmallest) {\n        myImg = images[2].url;\n      }\n    }\n    return myImg;\n  }\n\n  parseEvents(eventsSet){\n    if(!eventsSet._embedded){\n      if(typeof($widgetModalNoCode) !== \"undefined\"){\n        $widgetModalNoCode.modal();\n      }\n      return [];\n    }\n    eventsSet = eventsSet._embedded.events;\n    var tmpEventSet = [];\n\n    for(var key in eventsSet){\n      if(eventsSet.hasOwnProperty(key)){\n        let currentEvent = {};\n\n        currentEvent.id = eventsSet[key].id;\n        currentEvent.url = eventsSet[key].url;\n        currentEvent.name = eventsSet[key].name;\n\n        /* Change URL [START] */\n        var parser = document.createElement(\"a\");\n        parser.href = currentEvent.url;\n        var expr= \"/ticketmaster.evyy.net/\";\n        if (parser.href.match(expr) !== null) {\n            var changeURL = parser.pathname.split('/');\n            changeURL[3] = '330564';\n            currentEvent.url = parser.origin + changeURL.join('/') + parser.search + parser.hash;\n        }\n        /* Change URL [END] */\n\n        currentEvent.date = {\n          day: eventsSet[key].dates.start.localDate,\n          time: eventsSet[key].dates.start.localTime\n        };\n\n        if(eventsSet[key].hasOwnProperty('_embedded') && eventsSet[key]._embedded.hasOwnProperty('venues')){\n          let venue = eventsSet[key]._embedded.venues[0];\n          if(venue){\n            if(venue.address)\n              currentEvent.address = venue.address;\n\n            if(venue.name){\n              if(!currentEvent.address) currentEvent.address = {};\n              currentEvent.address.name = venue.name;\n            }\n          }\n        }\n\n        // Remove this comment to get categories\n        /*if(eventsSet[key]._embedded.hasOwnProperty('categories')){\n          currentEvent.categories = [];\n          let eventCategories = eventsSet[key]._embedded.categories;\n          currentEvent.categories = Object.keys(eventCategories).map(function(category){\n            return eventCategories[category].name\n          });\n        }*/\n        currentEvent.img = this.getImageForEvent(eventsSet[key].images , this.isListViewThumbnails, this.isFullWidth); //*this.listViewModificator() - is boolean*/\n\n        tmpEventSet.push(currentEvent);\n\n      }\n    }\n    return tmpEventSet;\n  }\n\n  makeRequest(handler, url=this.apiUrl, attrs={}, method=\"GET\"){\n    attrs = Object.keys(attrs).map(function(key){\n      return `${key}=${attrs[key]}`;\n    }).join(\"&\");\n\n    url = [url,attrs].join(\"?\");\n    if (this.widgetRoot.getAttribute('w-postalcodeapi') != null) url += '&postalCode=' + this.widgetRoot.getAttribute('w-postalcodeapi');\n    url += '&sort=date,asc';\n\n    this.xmlHTTP = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\n    if(method == \"POST\") {\n      this.xmlHTTP.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\n    }\n    this.xmlHTTP.widget = this;\n    this.xmlHTTP.onreadystatechange = handler;\n    this.xmlHTTP.open(method, url, true);\n    this.xmlHTTP.send();\n  }\n\n  initPretendedLink(el, url, isBlank){\n    if(el && url){\n      el.setAttribute('data-url', url);\n      el.classList.add(\"event-pretended-link\");\n      el.addEventListener('click', function(){\n        let url = this.getAttribute('data-url');\n        if(url){\n          let win = window.open(url, (isBlank ? '_blank' : '_self'));\n          win.focus();\n        }\n      });\n      el.addEventListener('touchstart', function(){\n        let url = this.getAttribute('data-url');\n        if(url){\n          let win = window.open(url, (isBlank ? '_blank' : '_self'));\n          win.focus();\n        }\n      });\n    }\n    return el;\n  }\n\n  createBackgroundImage(event, img) {\n    if (!this.isListView && !this.isListViewThumbnails ) {\n      var image = document.createElement(\"span\");\n      image.classList.add(\"bg-cover\");\n      image.style.backgroundImage = `url('${img}')`;\n      event.appendChild(image);\n    }\n    if(this.isListViewThumbnails) {\n      var wrapperImg = document.createElement(\"div\"),\n        image = document.createElement(\"span\");\n\n      wrapperImg.classList.add(\"wrapper-thumbnails\");\n      image.classList.add('bg-cover-thumbnails');\n      image.style.backgroundImage = `url('${img}')`;\n      if (!img) {\n        image.classList.add('bg-cover-default');\n        image.removeAttribute('style');\n      }\n      wrapperImg.appendChild(image);\n      event.appendChild(wrapperImg);\n\n      return wrapperImg;\n    }\n  }\n\n  addBarcode(domNode, url) {\n    if (this.isBarcodeWidget) {\n      let barcodeBtn = document.createElement(\"a\");\n      barcodeBtn.classList.add(\"barcode\");\n      barcodeBtn.target = '_blank';\n      barcodeBtn.href = url;\n      barcodeBtn.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickEventName', 'click');\");\n      domNode.appendChild(barcodeBtn);\n      let bottomBg = document.createElement(\"span\");\n      bottomBg.classList.add(\"barcode-bottom\");\n      domNode.appendChild(bottomBg);\n    }\n  }\n\n  addBuyButton(domNode, url) {\n    if (this.isListView || this.isListViewThumbnails ) {\n      let _urlValid = ( this.isUniversePluginInitialized && this.isUniverseUrl(url) ) || ( this.isTMPluginInitialized && this.isAllowedTMEvent(url) );\n      if(!_urlValid) url = '';\n      let buyBtn = document.createElement(\"a\");\n      buyBtn.appendChild(document.createTextNode('BUY NOW'));\n      buyBtn.classList.add(\"event-buy-btn\");\n      buyBtn.target = '_blank';\n      buyBtn.href = url;\n      buyBtn.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickBuyButton', 'click');\");\n      domNode.appendChild(buyBtn);\n    }\n  }\n\n  addScroll() {\n    (function(n,t){function u(n){n.hasOwnProperty(\"data-simple-scrollbar\")||Object.defineProperty(n,\"data-simple-scrollbar\",new SimpleScrollbar(n))}function e(n,i){function f(n){var t=n.pageY-u;u=n.pageY;r(function(){i.el.scrollTop+=t/i.scrollRatio})}function e(){n.classList.remove(\"ss-grabbed\");t.body.classList.remove(\"ss-grabbed\");t.removeEventListener(\"mousemove\",f);t.removeEventListener(\"mouseup\",e)}var u;n.addEventListener(\"mousedown\",function(i){return u=i.pageY,n.classList.add(\"ss-grabbed\"),t.body.classList.add(\"ss-grabbed\"),t.addEventListener(\"mousemove\",f),t.addEventListener(\"mouseup\",e),!1})}function i(n){for(this.target=n,this.bar='<div class=\"ss-scroll\">',this.wrapper=t.createElement(\"div\"),this.wrapper.setAttribute(\"class\",\"ss-wrapper\"),this.el=t.createElement(\"div\"),this.el.setAttribute(\"class\",\"ss-content\"),this.wrapper.appendChild(this.el);this.target.firstChild;)this.el.appendChild(this.target.firstChild);this.target.appendChild(this.wrapper);this.target.insertAdjacentHTML(\"beforeend\",this.bar);this.bar=this.target.lastChild;e(this.bar,this);this.moveBar();this.el.addEventListener(\"scroll\",this.moveBar.bind(this));this.el.addEventListener(\"mouseenter\",this.moveBar.bind(this));this.target.classList.add(\"ss-container\")}function f(){for(var i=t.querySelectorAll(\"*[ss-container]\"),n=0;n<i.length;n++)u(i[n])}var r=n.requestAnimationFrame||n.setImmediate||function(n){return setTimeout(n,0)};i.prototype={moveBar:function(){var t=this.el.scrollHeight,i=this.el.clientHeight,n=this;this.scrollRatio=i/t;r(function(){n.bar.style.cssText=\"height:\"+i/t*100+\"%; top:\"+n.el.scrollTop/t*100+\"%;right:-\"+(n.target.clientWidth-n.bar.clientWidth)+\"px;\"})}};t.addEventListener(\"DOMContentLoaded\",f);i.initEl=u;i.initAll=f;n.SimpleScrollbar=i})(window,document)\n    // var scrollRoot = document.getElementsByClassName(\"ss\")[0];\n    var scrollRoot = document.querySelector('.ss');\n    SimpleScrollbar.initEl(scrollRoot);\n  }\n\n  createDOMItem(itemConfig){\n    var medWrapper = document.createElement(\"div\");\n    medWrapper.classList.add(\"event-content-wraper\");\n\n    var event = document.createElement(\"li\");\n    event.classList.add(\"event-wrapper\");\n    event.style.height = (!this.isFullWidth) ? `${this.widgetContentHeight - this.borderSize * 2}px` : `${this.widgetContentHeight - this.borderSize * 2}px`;\n    event.style.width = (!this.isFullWidth) ? `${this.config.width - this.borderSize * 2}px` : `${this.widgetRoot.offsetWidth - this.borderSize * 2 }px`;\n\n    let wrapperImg = this.createBackgroundImage(event, itemConfig.img);\n    var titleLink = document.querySelector('[w-type=\"event-discovery\"]').getAttribute('w-titlelink');\n    var nameContent = document.createTextNode(itemConfig.name);\n\n    if (titleLink && titleLink == 'off') {\n      let name = document.createElement(\"span\");\n      name.classList.add(\"event-name\");\n      name.appendChild(nameContent);\n      this.initPretendedLink(name, itemConfig.url, true);\n      name.setAttribute('onclick', `ga('send', 'event', 'DiscoveryClickeventName_theme=${this.config.theme}_width=${this.config.width}_height=${this.config.height}_color_scheme=${this.config.colorscheme}', 'click', '${itemConfig.url}');`);\n      name.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickeventName', 'click', '\" + itemConfig.url + \"');\");\n      medWrapper.appendChild(name);\n    }\n    else {\n      let name = document.createElement(\"a\");\n      name.classList.add(\"event-name\");\n      name.classList.add(\"event-pretended-link\");\n      name.href = itemConfig.url;\n      name.appendChild(nameContent);\n      name.setAttribute('onclick', `ga('send', 'event', 'DiscoveryClickeventName_theme=${this.config.theme}_width=${this.config.width}_height=${this.config.height}_color_scheme=${this.config.colorscheme}', 'click', '${itemConfig.url}');`);\n      name.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickeventName', 'click', '\" + itemConfig.url + \"');\");\n      medWrapper.appendChild(name);\n    }\n\n    this.addBarcode(event, itemConfig.url);\n    this.addBuyButton( (!this.isListViewThumbnails) ? medWrapper : wrapperImg, itemConfig.url ); //add 'BuyButton' to '.wrapper-thumbnails' if choose ListViewThumbnails\n\n    var dateTimeContent = document.createTextNode(this.formatDate(itemConfig.date)),\n    dateTime = document.createElement(\"span\");\n    dateTime.classList.add(\"event-date\", \"centered-logo\");\n    dateTime.appendChild(dateTimeContent);\n\n    var dateWraper = document.createElement(\"span\");\n    dateWraper.classList.add(\"event-date-wraper\");\n    dateWraper.appendChild(dateTime);\n    medWrapper.appendChild(dateWraper);\n\n    if(itemConfig.hasOwnProperty(\"address\")){\n      var addressWrapper = document.createElement(\"span\");\n      addressWrapper.classList.add(\"address-wrapper\");\n\n      if( itemConfig.address.hasOwnProperty(\"name\") ){\n        var addressNameText = document.createTextNode(itemConfig.address.name),\n            addressName =  document.createElement(\"span\");\n        addressName.classList.add(\"event-address\");\n        addressName.classList.add(\"event-address-name\");\n        addressName.appendChild(addressNameText);\n        addressWrapper.appendChild(addressName);\n      }\n\n      if( itemConfig.address.hasOwnProperty(\"line1\") ){\n        var addressOneText = document.createTextNode(itemConfig.address.line1),\n        addressOne =  document.createElement(\"span\");\n        addressOne.classList.add(\"event-address\");\n        addressOne.appendChild(addressOneText);\n        addressWrapper.appendChild(addressOne);\n      }\n\n      if( itemConfig.address.hasOwnProperty(\"line2\") ){\n        var addressTwoText = document.createTextNode(itemConfig.address.line2),\n        addressTwo =  document.createElement(\"span\");\n        addressTwo.classList.add(\"event-address\");\n        addressTwo.appendChild(addressTwoText);\n        addressWrapper.appendChild(addressTwo);\n      }\n\n      medWrapper.appendChild(addressWrapper);\n    }\n\n    if(itemConfig.hasOwnProperty(\"categories\")) {\n      var categoriesWrapper = document.createElement(\"span\");\n      categoriesWrapper.classList.add(\"category-wrapper\");\n\n      itemConfig.categories.forEach(function (element) {\n        var categoryText = document.createTextNode(element),\n          category = document.createElement(\"span\");\n        category.classList.add(\"event-category\");\n        category.appendChild(categoryText);\n        categoriesWrapper.appendChild(category);\n      });\n      medWrapper.appendChild(categoriesWrapper);\n    }\n\n    event.appendChild(medWrapper);\n\n    return event;\n  }\n\n  makeImageUrl(id){\n    return `https://app.ticketmaster.com/discovery-widget/v2/events/${id}/images.json`;\n  }\n\n\n  /*\n   * Config block\n   */\n\n  decConfig(config){\n    return JSON.parse(window.atob(config));\n  }\n\n  encConfig(config){\n    return window.btoa(config);\n  }\n\n  toShortISOString(dateObj){\n    return dateObj.getFullYear() +\n      \"-\" + (dateObj.getMonth() + 1 < 10 ? \"0\"+ (dateObj.getMonth()+ 1): dateObj.getMonth() + 1) +\n      \"-\" + (dateObj.getDate() < 10 ? \"0\"+ dateObj.getDate(): dateObj.getDate()) +\n      \"T\" + (dateObj.getHours() < 10 ? \"0\"+dateObj.getHours(): dateObj.getHours()) +\n      \":\" + (dateObj.getMinutes() < 10 ? \"0\"+dateObj.getMinutes(): dateObj.getMinutes()) +\n      \":\" + (dateObj.getSeconds() < 10 ? \"0\"+dateObj.getSeconds(): dateObj.getSeconds()) +\n      \"Z\";\n  }\n\n  getDateFromPeriod(period){\n\n    var period = period.toLowerCase(),\n      firstDay, lastDay;\n\n    if(period == \"year\" ) {\n      // firstDay = new Date( new Date(new Date()).toISOString() );\n      // lastDay = new Date( new Date(new Date().valueOf()+24*365*60*60*1000).toISOString() );\n      firstDay = new Date().toISOString().slice(0,19) + 'Z';\n      lastDay = new Date(new Date().valueOf()+24*365*60*60*1000).toISOString().slice(0,19) + 'Z';\n    }\n    else if(period == \"month\") {\n      // firstDay = new Date( new Date(new Date()).toISOString() );\n      // lastDay = new Date( new Date(new Date().valueOf()+24*31*60*60*1000).toISOString() );\n      firstDay = new Date().toISOString().slice(0,19) + 'Z';\n      lastDay = new Date(new Date().valueOf()+24*31*60*60*1000).toISOString().slice(0,19) + 'Z';\n    }\n    else if(period == \"week\") {\n      // firstDay = new Date( new Date(new Date()).toISOString() );\n      // lastDay = new Date( new Date(new Date().valueOf()+24*7*60*60*1000).toISOString() );\n      firstDay = new Date().toISOString().slice(0,19) + 'Z';\n      lastDay = new Date(new Date().valueOf()+24*7*60*60*1000).toISOString().slice(0,19) + 'Z';\n    } else {\n      // firstDay = new Date( new Date(new Date()).toISOString() );\n      // lastDay = new Date( new Date(new Date().valueOf()+24*60*60*1000).toISOString() );\n      firstDay = new Date().toISOString().slice(0,19) + 'Z';\n      lastDay = new Date(new Date().valueOf()+24*60*60*1000).toISOString().slice(0,19) + 'Z';\n    }\n\n    // return [this.toShortISOString(firstDay), this.toShortISOString(lastDay)];\n    return [firstDay, lastDay];\n  }\n\n}\nlet widgetsEventDiscovery = [];\n(function () {\n  let widgetContainers = document.querySelectorAll(\"div[w-type='event-discovery']\");\n  for (let i = 0; i < widgetContainers.length; ++i) {\n    widgetsEventDiscovery.push(new TicketmasterEventDiscoveryWidget(widgetContainers[i]));\n  }\n\n})();\n\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-78315612-1', 'auto');\nga('send', 'pageview');\n\nif(typeof module !== \"undefined\") {\n  module.exports = { widgetsEventDiscovery, TicketmasterEventDiscoveryWidget };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// products-and-docs/widgets/event-discovery/1.0.0/src/main-widget.es6"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;;;AChEA;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxFA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AAGA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAqBA;;;AAWA;AACA;AACA;AAAA;AAGA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;AAAA;AACA;AAGA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAWA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAIA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAOA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}