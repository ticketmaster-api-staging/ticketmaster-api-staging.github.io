{"version":3,"file":"./products-and-docs/widgets/map/1.0.0/lib/main-widget.js","sources":["webpack:///webpack/bootstrap 5efcc47148a387659040","webpack:///products-and-docs/widgets/map/1.0.0/src/main-widget.es6"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5efcc47148a387659040","class TicketmasterMapWidget {\n\n    set config(attrs) { this.widgetConfig = this.loadConfig(attrs); }\n    get config() { return this.widgetConfig; }\n\n    set events(responce){ this.eventsList = this.parseEvents(responce);}\n    get events(){ return this.eventsList;}\n\n    get isSimpleProportionM() { return this.config.proportion === 'm'}\n    get borderSize(){ return this.config.border || 0;}\n    get widgetHeight(){ return this.config.height || 600;}\n\n    get widgetContentHeight() {\n        // return this.widgetHeight - (this.isListView || this.isSimpleProportionM ? 0 : 39) || 600;\n        return this.widgetHeight;\n    }\n\n    get eventUrl(){ return \"https://www.ticketmaster.com/event/\"; }\n\n    get apiUrl(){ return \"https://app.ticketmaster.com/discovery/v2/events.json\"; }\n\n    get themeUrl() {\n        return (window.location.host === 'developer.ticketmaster.com')\n            ? `https://developer.ticketmaster.com/products-and-docs/widgets/map/1.0.0/theme/`\n            : `https://ticketmaster-api-staging.github.io/products-and-docs/widgets/map/1.0.0/theme/`;\n    }\n\n    get portalUrl(){\n        return (window.location.host === 'developer.ticketmaster.com')\n            ? `https://developer.ticketmaster.com/`\n            : `https://ticketmaster-api-staging.github.io/`;\n    }\n\n    get logoUrl() { return \"https://www.ticketmaster.com/\"; }\n\n    get legalNoticeUrl() { return \"http://developer.ticketmaster.com/support/terms-of-use/\"; }\n\n    get questionUrl() { return \"http://developer.ticketmaster.com/support/faq/\"; }\n\n    get widgetVersion() { return `${__VERSION__}`; }\n\n    get geocodeUrl() { return \"https://maps.googleapis.com/maps/api/geocode/json\"; }\n\n    get updateExceptions() { return [\"width\", \"height\", \"border\", \"borderradius\", \"colorscheme\", \"layout\", \"affiliateid\", \"propotion\", \"googleapikey\", \"latlong\"]}\n\n    get hideMessageDelay(){ return 5000; }\n\n    get controlHiddenClass(){ return \"events_control-hidden\"; }\n\n    get tmWidgetWhiteList(){ return [\"2200504BAD4C848F\", \"00005044BDC83AE6\", \"1B005068DB60687F\", \"1B004F4DBEE45E47\", \"3A004F4ED7829D5E\", \"3A004F4ED1FC9B63\", \"1B004F4FF83289C5\", \"1B004F4FC0276888\", \"0E004F4F3B7DC543\", \"1D004F4F09C61861\", \"1600505AC9A972A1\", \"22004F4FD82795C6\", \"01005057AFF54574\", \"01005056FAD8793A\", \"3A004F4FB2453240\", \"22004F50D2149AC6\", \"01005059AD49507A\", \"01005062B4236D5D\"]; }\n\n    get countriesWhiteList() {\n        return [\n            'Australia',\n            'Austria',\n            'Belgium',\n            'Canada',\n            'Denmark',\n            'Finland',\n            'France',\n            'Germany',\n            'Ireland',\n            'Mexico',\n            'Netherlands',\n            'New Zealand',\n            'Norway',\n            'Spain',\n            'Sweden',\n            'Turkey',\n            'UAE',\n            'United Kingdom',\n            'United States'\n        ]\n    }\n\n    isConfigAttrExistAndNotEmpty(attr) {\n        if( !this.config.hasOwnProperty(attr) || this.config[attr] === \"undefined\"){\n            return false;\n        }else if( this.config[attr] === \"\"){\n            return false;\n        }\n        return true;\n    }\n\n    get eventReqAttrs(){\n        let mapWidgetRoot = this.eventsRootContainer.parentNode;\n        let attrs = {},\n            params = [\n                {\n                    attr: 'tmapikey',\n                    verboseName: 'apikey'\n                },\n                {\n                    attr: 'latlong',\n                    verboseName: 'latlong'\n                },\n                {\n                    attr: 'postalcode',\n                    verboseName: 'postalCode'\n                },\n                {\n                    attr: 'keyword',\n                    verboseName: 'keyword'\n                },\n                {\n                    attr: 'size',\n                    verboseName: 'size'\n                },\n                {\n                    attr: 'radius',\n                    verboseName: 'radius'\n                },\n                {\n                    attr: 'attractionid',\n                    verboseName: 'attractionId'\n                },\n                {\n                    attr: 'promoterid',\n                    verboseName: 'promoterId'\n                },\n                {\n                    attr: 'venueid',\n                    verboseName: 'venueId'\n                },\n                {\n                    attr: 'classificationname',\n                    verboseName: 'classificationName'\n                },\n                {\n                    attr: 'city',\n                    verboseName: 'city'\n                },\n                {\n                    attr: 'countrycode',\n                    verboseName: 'countryCode'\n                },\n                {\n                    attr: 'source',\n                    verboseName: 'source'\n                }\n            ];\n\n        for(let i in params){\n            let item = params[i];\n            if(this.isConfigAttrExistAndNotEmpty(item.attr))\n                attrs[item.verboseName] = this.config[item.attr];\n        }\n\n        if(this.config.latlong){\n            attrs.latlong = this.config.latlong;\n        }\n\n        if(this.config.postalcode) {\n            attrs.postalcode = this.config.postalcode;\n        }\n\n        if(this.isConfigAttrExistAndNotEmpty(\"period\")){\n            let period = this.getDateFromPeriod(this.config.period);\n            attrs.startDateTime = period[0];\n            attrs.endDateTime = period[1];\n        }\n\n        if (this.config.tmapikey == '') {\n            attrs.apikey = apiKeyService.checkApiKeyCookie() || apiKeyService.getApiWidgetsKey();\n        }\n\n        if (mapWidgetRoot.getAttribute(\"w-latlong\") != '') {\n            attrs.latlong = mapWidgetRoot.getAttribute(\"w-latlong\");\n        }\n\n        if (attrs.latlong == ',') {\n            delete attrs.latlong;\n        }\n\n        if (attrs.latlong == null) {\n            delete attrs.latlong;\n        }\n\n        return attrs;\n    }\n\n    constructor(root) {\n        if(!root) return;\n        this.widgetRoot = root;\n        if (this.widgetRoot.querySelector('.events-root-container') === null) {\n            this.eventsRootContainer = document.createElement(\"div\");\n            this.eventsRootContainer.classList.add(\"events-root-container\");\n            this.widgetRoot.appendChild(this.eventsRootContainer);\n\n            this.config = this.widgetRoot.attributes;\n\n            this.eventsRoot = document.createElement(\"div\");\n            this.eventsRoot.classList.add(\"map\");\n            // this.eventsRoot.style.height = parseInt(parseInt(this.widgetHeight) + 25) + \"px\";\n            this.eventsRoot.style.height = this.widgetHeight + \"px\";\n            this.eventsRoot.style.width = this.config.width + \"px\";\n            this.eventsRootContainer.appendChild(this.eventsRoot);\n\n            if (this.config.theme !== null && !document.getElementById(`widget-theme-${this.config.theme}`)) {\n                this.makeRequest(this.styleLoadingHandler, this.themeUrl + this.config.theme + \".css\");\n            }\n\n            this.eventsRootContainer.classList.remove(\"border\");\n            if (this.config.border) {\n                this.eventsRootContainer.classList.add(\"border\");\n            }\n\n            this.widgetRoot.style.height = `${this.widgetHeight}px`;\n            this.widgetRoot.style.width = `${this.config.width}px`;\n            this.eventsRootContainer.style.height = `${this.widgetHeight}px`;\n            this.eventsRootContainer.style.width = `${this.config.width}px`;\n            this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\n            this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\n\n            //this.clear();\n\n            this.AdditionalElements();\n\n            this.useGeolocation();\n\n            this.getCoordinates(() => {\n                this.makeRequest(this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs);\n            });\n            /*plugins for 'buy button'*/\n            this.embedUniversePlugin();\n            this.embedTMPlugin();\n            this.initBuyBtn();\n            this.initMessage();\n        }\n    }\n\n    getCoordinates(cb){\n        let widget = this;\n        if(this.config.postalcode) {\n            widget.config.postalcode = this.config.postalcode;\n            cb(widget.config.postalcode);\n        }else{\n            // Used in builder\n            if(widget.onLoadCoordinate) widget.onLoadCoordinate(null);\n            widget.config.latlong = '';\n            // widget.config.countrycode = '';\n            cb(widget.config.latlong);\n        }\n    }\n\n    initBuyBtn(){\n        this.buyBtn = document.createElement(\"a\");\n        this.buyBtn.appendChild(document.createTextNode('BUY NOW'));\n        this.buyBtn.classList.add(\"event-buy-btn\");\n        this.buyBtn.classList.add(\"main-btn\");\n        this.buyBtn.target = '_blank';\n        this.buyBtn.href = '';\n        this.buyBtn.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickBuyButton', 'click');\");\n        this.buyBtn.addEventListener('click', (e)=> {\n            e.preventDefault();\n        });\n        this.eventsRootContainer.appendChild(this.buyBtn);\n    }\n\n    setBuyBtnUrl(){\n        if(this.buyBtn){\n            let event = '',\n                url = '';\n            if(event){\n                if(event.url){\n\n                    if((this.isUniversePluginInitialized && this.isUniverseUrl(event.url)) || (this.isTMPluginInitialized && this.isAllowedTMEvent(event.url))){\n                        url = event.url;\n                    }\n\n                }\n            }\n            this.buyBtn.href = url;\n        }\n    }\n\n    isUniverseUrl(url){\n        return (url.match(/universe.com/g) || url.match(/uniiverse.com/g) || url.match(/ticketmaster.com/g));\n    }\n\n    isAllowedTMEvent(url){\n        for (var t = [/(?:ticketmaster\\.com)\\/(.*\\/)?event\\/([^\\/?#]+)/, /(?:concerts\\.livenation\\.com)\\/(.*\\/)?event\\/([^\\/?#]+)/], n = null, r = 0; r < t.length && (n = url.match(t[r]), null === n); r++);\n        let id = (null !== n ? n[2] : void 0);\n        return (this.tmWidgetWhiteList.indexOf(id) > -1);\n    }\n\n    embedTMPlugin(){\n        let id = 'id_tm_widget';\n        if( !document.getElementById(id) ) {\n            let script = document.createElement('script');\n            script.setAttribute('src', this.portalUrl + 'scripts/vendors/tm.js');\n            script.setAttribute('type', 'text/javascript');\n            script.setAttribute('charset', 'UTF-8');\n            script.setAttribute('id', id);\n            (document.head || document.getElementsByTagName('head')[0]).appendChild(script);\n        }\n        this.isTMPluginInitialized = true;\n    }\n\n    embedUniversePlugin(){\n        let id = 'id_universe_widget';\n        if( !document.getElementById(id) ){\n            let script = document.createElement('script');\n            script.setAttribute('src', 'https://www.universe.com/embed.js');\n            script.setAttribute('type', 'text/javascript');\n            script.setAttribute('charset', 'UTF-8');\n            script.setAttribute('id', id);\n            (document.head || document.getElementsByTagName('head')[0]).appendChild(script);\n        }\n        this.isUniversePluginInitialized = true;\n    }\n\n    // Message\n    initMessage(){\n        this.messageDialog = document.createElement('div');\n        this.messageDialog.classList.add(\"event-message\");\n        this.messageContent = document.createElement('div');\n        this.messageContent.classList.add(\"event-message__content\");\n\n        let messageClose = document.createElement('div');\n        messageClose.classList.add(\"event-message__btn\");\n        messageClose.addEventListener(\"click\", ()=> {\n            this.hideMessage();\n        });\n\n        this.messageDialog.appendChild(this.messageContent);\n        this.messageDialog.appendChild(messageClose);\n        this.eventsRootContainer.appendChild(this.messageDialog);\n    }\n\n    showMessage(message, hideMessageWithoutDelay){\n        if(message.length){\n            this.hideMessageWithoutDelay = hideMessageWithoutDelay;\n            this.messageContent.innerHTML = message;\n            this.messageDialog.classList.add(\"event-message-visible\");\n            if (this.messageTimeout) {\n                clearTimeout(this.messageTimeout); // Clear timeout if before 'hideMessageWithDelay' was called\n            }\n        }\n    }\n\n    hideMessageWithDelay(delay){\n        if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout if this method was called before\n        this.messageTimeout = setTimeout(()=>{\n            this.hideMessage();\n        }, delay);\n    }\n\n    hideMessage(){\n        if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout and hide message immediately.\n        this.messageDialog.classList.remove(\"event-message-visible\");\n    }\n    // End message\n\n    useGeolocation() {\n        var widget = this;\n        var clickNearMe = function(e) {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    e.target.parentNode.setAttribute('w-latlong', latitude + ',' + longitude);\n                    widget.update();\n                });\n\n            }\n        };\n\n        var buttons = document.getElementsByClassName(\"near-me-btn\");\n        for (var i = 0; i < buttons.length; i++) {\n            var current = buttons[i];\n            current.addEventListener('click', clickNearMe, false);\n            current.addEventListener('touchstart', clickNearMe, false);\n        }\n    }\n\n    AdditionalElements(){\n        var nearMeBtn = document.createElement(\"span\");\n        nearMeBtn.classList.add('near-me-btn');\n        if (this.widgetRoot.getAttribute(\"w-geoposition\") !== 'on') nearMeBtn.classList.add('dn');\n        nearMeBtn.setAttribute('title', 'Show events near me');\n        this.widgetRoot.appendChild(nearMeBtn);\n\n        var legalNoticeContent = document.createTextNode('Legal Notice'),\n            legalNotice = document.createElement(\"a\");\n        legalNotice.appendChild(legalNoticeContent);\n        legalNotice.classList.add(\"legal-notice\");\n        legalNotice.target = '_blank';\n        legalNotice.href = this.legalNoticeUrl;\n        this.widgetRoot.appendChild(legalNotice);\n\n        var logo = document.createElement('a');\n        logo.classList.add(\"event-logo\",\"centered-logo\");\n        logo.target = '_blank';\n        logo.href = this.logoUrl;\n        logo.innerHTML = 'Powered by ';\n\n        var logoBox = document.createElement('div');\n        logoBox.classList.add(\"event-logo-box\");\n        logoBox.appendChild(logo);\n        this.eventsRootContainer.appendChild(logoBox);\n\n        let question = document.createElement('span');\n        question.classList.add(\"event-question\");\n        question.target = '_blank';\n        question.href = this.questionUrl;\n        question.addEventListener('click', toolTipHandler);\n        this.eventsRootContainer.appendChild(question);\n\n        let toolTip = document.createElement('div'),\n            tooltipHtml = `\n              <div class=\"tooltip-inner\"> \n                <a href=\"${this.questionUrl}\" target = \"_blank\" >About widget</a>\n                <div class=\"place\">version: <b>${this.widgetVersion}</b></div>\n              </div>`;\n        toolTip.classList.add(\"tooltip-version\");\n        toolTip.classList.add(\"left\");\n        toolTip.innerHTML = tooltipHtml;\n        this.eventsRootContainer.appendChild(toolTip);\n\n        function toolTipHandler(e) {\n            e.preventDefault();\n            e.target.nextSibling.classList.toggle('show-tip');\n        }\n    }\n\n    formatDate(date) {\n        var result = '';\n        if(!date.day) return result; // Day is required\n\n        function LZ(x) {\n            return (x < 0 || x > 9 ? \"\" : \"0\") + x\n        }\n        var MONTH_NAMES = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\n            DAY_NAMES = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\n            dayArray = date.day.split('-'),\n            d = parseInt(dayArray[2]),\n            M = parseInt(dayArray[1]);\n\n        // var E = new Date(date.day).getDay();\n        var E = new Date(+date.day.split('-')[0],(+date.day.split('-')[1])-1,+date.day.split('-')[2]).getDay();\n        result = DAY_NAMES[E] + ', ' + MONTH_NAMES[M - 1] + ' ' + d + ', ' + dayArray[0];\n\n        if(!date.time) return result;\n\n        var timeArray = date.time.split(':'),\n            H = parseInt(timeArray[0]),\n            m = timeArray[1],\n            a = \"AM\";\n\n        if (H > 11) a = \"PM\";\n        if (H == 0) {\n            H = 12;\n        } else if (H > 12) {\n            H = H - 12;\n        }\n\n        return result + ' ' + LZ(H) + ':' + m + ' ' + a;\n    }\n\n    clearEvents(){\n        this.eventsRoot.innerHTML = \"\";\n    }\n\n    clear(){\n        var modificatorList = this.widgetRoot.getElementsByClassName('modificator');\n        while (modificatorList.length) {\n            let el = modificatorList[0],\n                parent = el.parentNode;\n            parent.removeChild(el);\n        }\n        this.clearEvents();\n    }\n\n    update() {\n\n        let oldTheme = this.config.constructor();\n        for (let attr in this.config) {\n            if (this.config.hasOwnProperty(attr)) oldTheme[attr] = this.config[attr];\n        }\n\n        this.config = this.widgetRoot.attributes;\n\n        this.widgetRoot.style.height = `${this.widgetHeight}px`;\n        this.widgetRoot.style.width  = `${this.config.width}px`;\n        this.eventsRootContainer.style.height = `${this.widgetContentHeight}px`;\n        this.eventsRootContainer.style.width  = `${this.config.width}px`;\n        this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\n        this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\n\n        this.eventsRootContainer.classList.remove(\"border\");\n        if( this.config.hasOwnProperty(\"border\") ){\n            this.eventsRootContainer.classList.add(\"border\");\n        }\n\n        this.clear();\n        this.getCoordinates(() => {\n            this.makeRequest( this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs );\n        });\n\n        let events = this.eventsRoot.getElementsByClassName(\"event-wrapper\");\n        this.useGeolocation();\n\n    }\n\n    needToUpdate(newTheme, oldTheme, forCheck = []){\n        return Object.keys(newTheme).map(function(key){\n                if(forCheck.indexOf(key) > -1) return true;\n                //console.warn([key, newTheme[key], oldTheme[key], newTheme[key] === oldTheme[key]])\n                return newTheme[key] === oldTheme[key] ;\n            }).indexOf(false) > -1\n    }\n\n    loadConfig(NamedNodeMap){\n        var config = {};\n        Object.keys(NamedNodeMap).map(function(value){\n            if( typeof(NamedNodeMap[value].name) !== \"undefined\" && NamedNodeMap[value].name.indexOf(\"w-\") !== -1){\n                config[ NamedNodeMap[value].name.replace(/w-/g, \"\").replace(/-/g, \"\") ] = NamedNodeMap[value].value;\n            }\n        });\n        return config;\n    }\n\n    styleLoadingHandler(){\n        if (this && this.readyState == XMLHttpRequest.DONE ) {\n            if(this.status == 200){\n                var style = document.createElement(\"style\");\n                style.setAttribute(\"type\",\"text/css\");\n                style.setAttribute(\"id\",`widget-theme-${this.widget.config.theme}`);\n                style.textContent = this.responseText;\n                document.getElementsByTagName(\"head\")[0].appendChild(style);\n            }\n        }\n    }\n\n    groupEventsByName(){\n        let groups = {};\n        this.events.map(function(event){\n            if (groups[event.name] === undefined) groups[event.name] = [];\n            groups[event.name].push(event);\n        });\n\n        this.eventsGroups = [];\n        for (let groupName in groups) {\n            this.eventsGroups.push(groups[groupName]);\n        }\n    }\n\n    resetReduceParamsOrder(){\n        this.reduceParamsOrder = 0;\n    }\n\n    reduceParamsAndReloadEvents(){\n        let eventReqAttrs = {},\n            reduceParamsList = [\n                ['classificationName'],\n                ['city'],\n                ['countryCode'],\n                ['source'],\n                ['startDateTime', 'endDateTime', 'country'],\n                ['radius'],\n                ['postalCode', 'latlong'],\n                ['attractionId'],\n                ['promoterId'],\n                // ['segmentId'],\n                ['venueId'],\n                ['keyword'],\n                ['size']\n            ];\n\n        // make copy of params\n        for(let key in this.eventReqAttrs){\n            eventReqAttrs[key] = this.eventReqAttrs[key]\n        }\n\n        if(!this.reduceParamsOrder) this.reduceParamsOrder = 0;\n        if(reduceParamsList.length > this.reduceParamsOrder){\n            for(let item in reduceParamsList){\n                if(this.reduceParamsOrder >= item){\n                    for(let i in reduceParamsList[item]){\n                        delete eventReqAttrs[reduceParamsList[item][i]];\n                    }\n                }\n            }\n\n            if(this.reduceParamsOrder === 0) this.showMessage(\"No results were found.<br/>Here other options for you.\");\n            this.reduceParamsOrder++;\n            this.makeRequest( this.eventsLoadingHandler, this.apiUrl, eventReqAttrs );\n        }else{\n            // We haven't any results\n            this.showMessage(\"No results were found.\", true);\n            this.reduceParamsOrder = 0;\n        }\n    }\n\n    setMarkers(map, markers) {\n\n        var infowindow = new google.maps.InfoWindow({\n            content: \" \",\n        });\n\n        var image = {\n            url: 'https://ticketmaster-api-staging.github.io/assets/widgets/1.0.0/img/marker.svg',\n            size: new google.maps.Size(22, 32),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(22, 32)\n        };\n\n        var imageActive = {\n            url: 'https://ticketmaster-api-staging.github.io/assets/widgets/1.0.0/img/marker-active.svg',\n            size: new google.maps.Size(22, 32),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(22, 32)\n        };\n\n        for (var i = 0; i < markers.length; i++) {\n            let sites = markers[i];\n            if (sites !== undefined) {\n                var siteLatLng = new google.maps.LatLng(sites[1], sites[2]);\n                var marker = new google.maps.Marker({\n                    position: siteLatLng,\n                    map: map,\n                    icon: image,\n                    title: sites[0],\n                    zIndex: sites[3],\n                    html: sites[4]\n                });\n            }\n            google.maps.event.addListener(marker, \"click\", function () {\n                infowindow.setContent(this.html);\n                infowindow.open(map, this);\n            });\n            google.maps.event.addListener(marker, 'mouseover', function() {\n                this.setIcon(imageActive);\n            });\n            google.maps.event.addListener(marker, 'mouseout', function() {\n                this.setIcon(image);\n            });\n        }\n    }\n\n    eventsLoadingHandler(){\n        let widget = this.widget;\n        var markers = [];\n        widget.clearEvents(); // Additional clearing after each loading\n        if (this && this.readyState == XMLHttpRequest.DONE ) {\n            if(this.status == 200){\n                widget.events = JSON.parse(this.responseText);\n                if(widget.events.length){\n\n                    var myLatLng = {lat: 34.0390107, lng: -118.2672801};\n\n                    var map = new google.maps.Map(widget.widgetRoot.firstChild.firstChild, {\n                        zoom: 4,\n                        center: myLatLng,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        mapTypeControl: false,\n                        panControl: false,\n                        streetViewControl: false,\n                        zoomControlOptions: {\n                            position: google.maps.ControlPosition.RIGHT_CENTER\n                        },\n                    });\n\n                    var latlngbounds = new google.maps.LatLngBounds();\n\n                    widget.groupEventsByName.call(widget);\n\n                    for (let e=0; e < widget.events.length; e++) {\n\n                        if (widget.events[e].location !== undefined) {\n                            let place = '';\n                            let address = '';\n                            let date = widget.formatDate({\n                                day: widget.events[e].date.day,\n                                time: widget.events[e].date.time\n                            });\n                            if (widget.events[e].address.hasOwnProperty('name')) {\n                                place = widget.events[e].address.name + ', ';\n                            }\n                            else {\n                                place = '';\n                            }\n                            if (widget.events[e].address.hasOwnProperty('line1')) {\n                                address = widget.events[e].address.line1;\n                            } else {\n                                address = '';\n                            }\n\n                            let buyBtn = '';\n                            if (widget.isUniverseUrl(widget.events[e].url) != false) buyBtn = '<a class=\"buybtn\" href=\"' + widget.events[e].url + '\">BUY NOW</a>';\n\n                            markers[e] = [\n                                widget.events[e].name,\n                                widget.events[e].location.lat,\n                                widget.events[e].location.lng,\n                                e,\n                                '<div class=\"infowindow\" style=\"width:220px!important;padding-right:5px!important;line-height:normal;overflow:auto;\"><a class=\"an\" href=\"' + widget.events[e].url + '\"><span class=\"img\" style=\"background:url(' + widget.events[e].img + ') center center no-repeat\"></span><span class=\"name\">' + widget.events[e].name + '</span></a>' + buyBtn + '<div class=\"dateplace\"><span class=\"date\">' + date + '</span><span class=\"place\">' + place + address + '</span></div></div>'\n                            ];\n                            latlngbounds.extend(new google.maps.LatLng(widget.events[e].location.lat, widget.events[e].location.lng));\n                        }\n                    }\n                    map.fitBounds( latlngbounds );\n\n                    widget.setMarkers(map ,markers);\n\n\n                    widget.resetReduceParamsOrder();\n                    if(widget.hideMessageWithoutDelay)\n                        widget.hideMessage();\n                    else\n                        widget.hideMessageWithDelay(widget.hideMessageDelay);\n                }else{\n                    widget.reduceParamsAndReloadEvents.call(widget);\n                }\n            }\n            else if(this.status == 400) {\n                widget.reduceParamsAndReloadEvents.call(widget);\n                console.log('There was an error 400');\n            }\n            else {\n                widget.reduceParamsAndReloadEvents.call(widget);\n                console.log('something else other than 200 was returned');\n            }\n        }\n    }\n\n    getImageForEvent(images){\n        let imgWidth;\n        let idx;\n        images.forEach(function (img, i) {\n            if (i == 0) imgWidth = img.width;\n            if (imgWidth > img.width) {\n                imgWidth = img.width;\n                idx = i;\n            }\n        });\n        return (idx === undefined) ? '' : images[idx].url;\n    }\n\n    parseEvents(eventsSet){\n        if(!eventsSet._embedded){\n            if(typeof($widgetModalNoCode) !== \"undefined\"){\n                $widgetModalNoCode.modal();\n            }\n            return [];\n        }\n        eventsSet = eventsSet._embedded.events;\n        var tmpEventSet = [];\n\n        for(var key in eventsSet){\n            if(eventsSet.hasOwnProperty(key)){\n                let currentEvent = {};\n\n                currentEvent.id = eventsSet[key].id;\n                currentEvent.url = eventsSet[key].url;\n                currentEvent.name = eventsSet[key].name;\n\n                /* Change URL [START] */\n                var parser = document.createElement(\"a\");\n                parser.href = currentEvent.url;\n                var expr= \"/ticketmaster.evyy.net/\";\n                if (parser.href.match(expr) !== null) {\n                    var changeURL = parser.pathname.split('/');\n                    changeURL[3] = '330564';\n                    currentEvent.url = parser.origin + changeURL.join('/') + parser.search + parser.hash;\n                }\n                /* Change URL [END] */\n\n                currentEvent.date = {\n                    day: eventsSet[key].dates.start.localDate,\n                    time: eventsSet[key].dates.start.localTime\n                };\n\n                if(eventsSet[key].hasOwnProperty('_embedded') && eventsSet[key]._embedded.hasOwnProperty('venues')){\n                    let venue = eventsSet[key]._embedded.venues[0];\n                    if(venue){\n                        if(venue.address)\n                            currentEvent.address = venue.address;\n\n                        if(venue.name) {\n                            if(!currentEvent.address) currentEvent.address = {};\n                            currentEvent.address.name = venue.name;\n                        }\n\n                        if (venue.location) {\n                            currentEvent.location = {\n                                lat: parseFloat(venue.location.latitude),\n                                lng: parseFloat(venue.location.longitude)\n                            };\n                        }\n                    }\n                }\n\n                // Remove this comment to get categories\n                /*if(eventsSet[key]._embedded.hasOwnProperty('categories')){\n                 currentEvent.categories = [];\n                 let eventCategories = eventsSet[key]._embedded.categories;\n                 currentEvent.categories = Object.keys(eventCategories).map(function(category){\n                 return eventCategories[category].name\n                 });\n                 }*/\n\n                currentEvent.img = this.getImageForEvent(eventsSet[key].images);\n                tmpEventSet.push(currentEvent);\n\n            }\n        }\n        return tmpEventSet;\n    }\n\n    makeRequest(handler, url=this.apiUrl, attrs={}, method=\"GET\"){\n        attrs = Object.keys(attrs).map(function(key){\n            return `${key}=${attrs[key]}`;\n        }).join(\"&\");\n\n        url = [url,attrs].join(\"?\");\n\n        this.xmlHTTP = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\n        if(method == \"POST\") {\n            this.xmlHTTP.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\n        }\n        this.xmlHTTP.widget = this;\n        this.xmlHTTP.onreadystatechange = handler;\n        this.xmlHTTP.open(method, url, true);\n        this.xmlHTTP.send();\n    }\n\n    initPretendedLink(el, url, isBlank){\n        if(el && url){\n            el.setAttribute('data-url', url);\n            el.classList.add(\"event-pretended-link\");\n            el.addEventListener('click', function(){\n                let url = this.getAttribute('data-url');\n                if(url){\n                    let win = window.open(url, (isBlank ? '_blank' : '_self'));\n                    win.focus();\n                }\n            });\n            el.addEventListener('touchstart', function(){\n                let url = this.getAttribute('data-url');\n                if(url){\n                    let win = window.open(url, (isBlank ? '_blank' : '_self'));\n                    win.focus();\n                }\n            });\n        }\n        return el;\n    }\n\n    addBuyButton(domNode, url) {\n        if (this.isListView) {\n            let _urlValid = ( this.isUniversePluginInitialized && this.isUniverseUrl(url) ) || ( this.isTMPluginInitialized && this.isAllowedTMEvent(url) );\n            if(!_urlValid) url = '';\n            let buyBtn = document.createElement(\"a\");\n            buyBtn.appendChild(document.createTextNode('BUY NOW'));\n            buyBtn.classList.add(\"event-buy-btn\");\n            buyBtn.target = '_blank';\n            buyBtn.href = url;\n            buyBtn.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickBuyButton', 'click');\");\n            domNode.appendChild(buyBtn);\n        }\n    }\n\n    createDOMItem(itemConfig){\n        var medWrapper = document.createElement(\"div\");\n        medWrapper.classList.add(\"event-content-wraper\");\n\n        var event = document.createElement(\"li\");\n        event.classList.add(\"event-wrapper\");\n        event.style.height = `${this.widgetContentHeight - this.borderSize * 2}px`;\n        event.style.width  = `${this.config.width - this.borderSize * 2}px`;\n\n        this.createBackgroundImage(event, itemConfig.img);\n\n        var nameContent = document.createTextNode(itemConfig.name),\n            name =  document.createElement(\"span\");\n        name.classList.add(\"event-name\");\n        name.appendChild(nameContent);\n        this.initPretendedLink(name, itemConfig.url, true);\n        name.setAttribute('onclick', `ga('send', 'event', 'DiscoveryClickeventName_theme=${this.config.theme}_width=${this.config.width}_height=${this.config.height}_color_scheme=${this.config.colorscheme}', 'click', '${itemConfig.url}');`);\n        /* name.setAttribute('onclick', \"ga('send', 'event', 'DiscoveryClickeventName', 'click', '\" + itemConfig.url + \"');\"); */\n        medWrapper.appendChild(name);\n\n\n        this.addBuyButton(medWrapper, itemConfig.url);\n\n        var dateTimeContent = document.createTextNode(this.formatDate(itemConfig.date)),\n            dateTime = document.createElement(\"span\");\n        dateTime.classList.add(\"event-date\", \"centered-logo\");\n        dateTime.appendChild(dateTimeContent);\n\n        var dateWraper = document.createElement(\"span\");\n        dateWraper.classList.add(\"event-date-wraper\");\n        dateWraper.appendChild(dateTime);\n        medWrapper.appendChild(dateWraper);\n\n        if(itemConfig.hasOwnProperty(\"address\")){\n            var addressWrapper = document.createElement(\"span\");\n            addressWrapper.classList.add(\"address-wrapper\");\n\n            if( itemConfig.address.hasOwnProperty(\"name\") ){\n                var addressNameText = document.createTextNode(itemConfig.address.name),\n                    addressName =  document.createElement(\"span\");\n                addressName.classList.add(\"event-address\");\n                addressName.classList.add(\"event-address-name\");\n                addressName.appendChild(addressNameText);\n                addressWrapper.appendChild(addressName);\n            }\n\n            if( itemConfig.address.hasOwnProperty(\"line1\") ){\n                var addressOneText = document.createTextNode(itemConfig.address.line1),\n                    addressOne =  document.createElement(\"span\");\n                addressOne.classList.add(\"event-address\");\n                addressOne.appendChild(addressOneText);\n                addressWrapper.appendChild(addressOne);\n            }\n\n            if( itemConfig.address.hasOwnProperty(\"line2\") ){\n                var addressTwoText = document.createTextNode(itemConfig.address.line2),\n                    addressTwo =  document.createElement(\"span\");\n                addressTwo.classList.add(\"event-address\");\n                addressTwo.appendChild(addressTwoText);\n                addressWrapper.appendChild(addressTwo);\n            }\n\n            medWrapper.appendChild(addressWrapper);\n        }\n\n        if(itemConfig.hasOwnProperty(\"categories\")) {\n            var categoriesWrapper = document.createElement(\"span\");\n            categoriesWrapper.classList.add(\"category-wrapper\");\n\n            itemConfig.categories.forEach(function (element) {\n                var categoryText = document.createTextNode(element),\n                    category = document.createElement(\"span\");\n                category.classList.add(\"event-category\");\n                category.appendChild(categoryText);\n                categoriesWrapper.appendChild(category);\n            });\n            medWrapper.appendChild(categoriesWrapper);\n        }\n\n        event.appendChild(medWrapper);\n\n        return event;\n    }\n\n    makeImageUrl(id){\n        return `https://app.ticketmaster.com/discovery/v2/events/${id}/images.json`;\n    }\n\n    /*\n     * Config block\n     */\n\n    decConfig(config){\n        return JSON.parse(window.atob(config));\n    }\n\n    encConfig(config){\n        return window.btoa(config);\n    }\n\n    toShortISOString(dateObj){\n        return dateObj.getFullYear() +\n            \"-\" + (dateObj.getMonth() + 1 < 10 ? \"0\"+ (dateObj.getMonth()+ 1): dateObj.getMonth() + 1) +\n            \"-\" + (dateObj.getDate() < 10 ? \"0\"+ dateObj.getDate(): dateObj.getDate()) +\n            \"T\" + (dateObj.getHours() < 10 ? \"0\"+dateObj.getHours(): dateObj.getHours()) +\n            \":\" + (dateObj.getMinutes() < 10 ? \"0\"+dateObj.getMinutes(): dateObj.getMinutes()) +\n            \":\" + (dateObj.getSeconds() < 10 ? \"0\"+dateObj.getSeconds(): dateObj.getSeconds()) +\n            \"Z\";\n    }\n\n    getDateFromPeriod(period){\n\n        var period = period.toLowerCase(),\n            firstDay, lastDay;\n\n        if(period == \"year\" ) {\n            // firstDay = new Date( new Date(new Date()).toISOString() );\n            // lastDay = new Date( new Date(new Date().valueOf()+24*365*60*60*1000).toISOString() );\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\n            lastDay = new Date(new Date().valueOf()+24*365*60*60*1000).toISOString().slice(0,19) + 'Z';\n        }\n        else if(period == \"month\") {\n            // firstDay = new Date( new Date(new Date()).toISOString() );\n            // lastDay = new Date( new Date(new Date().valueOf()+24*31*60*60*1000).toISOString() );\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\n            lastDay = new Date(new Date().valueOf()+24*31*60*60*1000).toISOString().slice(0,19) + 'Z';\n        }\n        else if(period == \"week\") {\n            // firstDay = new Date( new Date(new Date()).toISOString() );\n            // lastDay = new Date( new Date(new Date().valueOf()+24*7*60*60*1000).toISOString() );\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\n            lastDay = new Date(new Date().valueOf()+24*7*60*60*1000).toISOString().slice(0,19) + 'Z';\n        } else {\n            // firstDay = new Date( new Date(new Date()).toISOString() );\n            // lastDay = new Date( new Date(new Date().valueOf()+24*60*60*1000).toISOString() );\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\n            lastDay = new Date(new Date().valueOf()+24*60*60*1000).toISOString().slice(0,19) + 'Z';\n        }\n\n        // return [this.toShortISOString(firstDay), this.toShortISOString(lastDay)];\n        return [firstDay, lastDay];\n    }\n\n}\nlet widgetsMap = [];\n(function () {\n    let widgetContainers = document.querySelectorAll(\"div[w-type='map']\");\n    for (let i = 0; i < widgetContainers.length; ++i) {\n        widgetsMap.push(new TicketmasterMapWidget(widgetContainers[i]));\n    }\n\n})();\n\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-78315612-1', 'auto');\nga('send', 'pageview');\n\nif(typeof module !== \"undefined\") {\n    module.exports = { TicketmasterMapWidget, widgetsMap };\n}\n\n\n\n// WEBPACK FOOTER //\n// products-and-docs/widgets/map/1.0.0/src/main-widget.es6"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;;;AChEA;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhFA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AAGA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAqBA;;;AAWA;AACA;AACA;AAAA;AAGA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAWA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAOA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}